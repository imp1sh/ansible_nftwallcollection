# Specify a subnet which can't be used for dynamic address allocation,
# is available for hosts with matching --dhcp-host lines. Note that
# dhcp-host declarations will be ignored unless there is a dhcp-range
# of some type for the subnet in question.
# In this case the netmask is implied (it comes from the network
# configuration on the machine running dnsmasq) it is possible to give
# an explicit netmask instead.
#dhcp-range=192.168.0.0,static
{% if dnsmasq_dhcpenable is sameas true and dnsmasq_dhcp4ifs is defined %}
{% for dhcpinterface in dnsmasq_dhcp4ifs %}
{% for range in dhcpinterface['ranges'] %}
dhcp-range=interface:{{ dhcpinterface['interface'] }},{{ range['start'] }},{{ range['end'] }},{{ range['leasetime']|default('12h', true) }}
{% endfor %}
{% endfor %}
{% endif %}
{% if dnsmasq_options is defined %}
{% for dhcpoption in dnsmasq_options %}
dhcp-option={{ dhcpoption }}
{% endfor %}
{% endif %}



# Enable DHCPv6. Note that the prefix-length does not need to be specified
# and defaults to 64 if missing/
#dhcp-range=1234::2, 1234::500, 64, 12h

# Do Router Advertisements, BUT NOT DHCP for this subnet.
#dhcp-range=1234::, ra-only 

# Do Router Advertisements, BUT NOT DHCP for this subnet, also try and
# add names to the DNS for the IPv6 address of SLAAC-configured dual-stack 
# hosts. Use the DHCPv4 lease to derive the name, network segment and 
# MAC address and assume that the host will also have an
# IPv6 address calculated using the SLAAC algorithm.
#dhcp-range=1234::, ra-names

# Do Router Advertisements, BUT NOT DHCP for this subnet.
# Set the lifetime to 46 hours. (Note: minimum lifetime is 2 hours.)
#dhcp-range=1234::, ra-only, 48h

# Do DHCP and Router Advertisements for this subnet. Set the A bit in the RA
# so that clients can use SLAAC addresses as well as DHCP ones.
#dhcp-range=1234::2, 1234::500, slaac

# Do Router Advertisements and stateless DHCP for this subnet. Clients will
# not get addresses from DHCP, but they will get other configuration information.
# They will use SLAAC for addresses.
#dhcp-range=1234::, ra-stateless

# Do stateless DHCP, SLAAC, and generate DNS names for SLAAC addresses
# from DHCPv4 leases.
#dhcp-range=1234::, ra-stateless, ra-names
{% if dnsmasq_ipv6mode == "managed" %}
{% for interface in dnsmasq_dhcpifs %}
dhcp-range={{ interface['start'] }},{{ interface['end'] }},constructor:{{ interface['interface'] }}, ra-stateless, ra-names
{% endfor %}
{% elif dnsmasq_ipv6mode == "unmanaged" %}
{% for interface in dnsmasq_dhcpifs %}
dhcp-range=::,constructor:{{ interface['interface'] }}, ra-only
{% endfor %}
{% endif %}
enable-ra
